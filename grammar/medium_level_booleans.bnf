<grammar> ::= <selection-statement>
<selection-statement> ::= if(_<condition>_){_<statement>_}_else{_<statement>_}
                        | if(_<condition>_){_<statement>_}
<statement> ::= <terminal-func>
              | <selection-statement>
<terminal-func> ::= getDirectionTowardsClosestPill
                  | getDirectionAwayFromClosestNonEdibleGhost
                  | getDirectionTowardsClosestEdibleGhost
                  | getDirectionTowardsClosestPowerPill
                  
<condition> ::= <boolean-func>
              | <number-func>_<number-operator>_<number>
<boolean-func> ::= <boolean-api>
                 | !_<boolean-api>
<boolean-api> ::= isJunction
<number-func> ::= getDistanceToClosestNonEdibleGhost
                | getDistanceToClosestNonEdibleGhostUp
                | getDistanceToClosestNonEdibleGhostDown
                | getDistanceToClosestNonEdibleGhostLeft
                | getDistanceToClosestNonEdibleGhostRight
                | getDistanceToClosestEdibleGhost
                | getDistanceToClosestEdibleGhostUp
                | getDistanceToClosestEdibleGhostDown
                | getDistanceToClosestEdibleGhostLeft
                | getDistanceToClosestEdibleGhostRight
                | getNumberOfActivePowerPills
                | getDistToClosestPillUp
                | getDistToClosestPillDown
                | getDistToClosestPillLeft
                | getDistToClosestPillRight
                | getDistToClosestPill
                | getDistToClosestPowerPill
                | getDistToClosestPowerPillUp
                | getDistToClosestPowerPillDown
                | getDistToClosestPowerPillLeft
                | getDistToClosestPowerPillRight
                | getClosestJunctionExitsNumberUp
                | getClosestJunctionExitsNumberDown
                | getClosestJunctionExitsNumberLeft
                | getClosestJunctionExitsNumberRight
                | getDistanceToClosestJunctionUp
                | getDistanceToClosestJunctionDown
                | getDistanceToClosestJunctionLeft
                | getDistanceToClosestJunctionRight
                | getClosestNonEdibleGhostDistanceToClosestJunctionUp
                | getClosestNonEdibleGhostDistanceToClosestJunctionDown
                | getClosestNonEdibleGhostDistanceToClosestJunctionLeft
                | getClosestNonEdibleGhostDistanceToClosestJunctionRight
                | getClosestEdibleGhostDistanceToClosestJunctionUp
                | getClosestEdibleGhostDistanceToClosestJunctionDown
                | getClosestEdibleGhostDistanceToClosestJunctionLeft
                | getClosestEdibleGhostDistanceToClosestJunctionRight
                | getGeometricMeanDistanceToNonEdibleGhosts
                | getGeometricMeanDistanceToEdibleGhosts
<number-operator> ::= EQ
                    | NE
                    | LT
                    | GT
                    | LE
                    | GE

<number> ::= 5 | 10 | 15 | 20 | 25 | 30 | 40 | 50 | 60 | 75 | 80 | 90